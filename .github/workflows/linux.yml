name: Linux builds
on: push

concurrency:
  group: linux-${{ github.ref }}
  cancel-in-progress: true

jobs:
  cmake-builds:
    strategy:
      matrix:
        target: [AudioPluginExample,
                 ConsoleAppExample,
                 GuiAppExample]
        config: [Debug, Release]
    name: ${{ matrix.target }} (CMake - ${{ matrix.config }})
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build CMake target ${{ matrix.target }}
        uses: ./.github/actions/build-cmake
        with:
          build-dir: ./cmake-build
          generator: Ninja Multi-Config
          config: ${{ matrix.config }}
          target: ${{ matrix.target }}
          configure-args: -DJUCE_BUILD_EXAMPLES=ON

  projucer-builds:
    strategy:
      matrix:
        project: [
          {dir: examples, name: DemoRunner},
          {dir: extras, name: AudioPerformanceTest},
          {dir: extras, name: AudioPluginHost},
          {dir: extras, name: BinaryBuilder},
          {dir: extras, name: NetworkGraphicsDemo},
          {dir: extras, name: Projucer},
          {dir: extras, name: UnitTestRunner},
        ]
        config: [Debug, Release]
        compiler: [g++, clang++]
    name: ${{ matrix.project.name }} (${{ matrix.compiler }} ${{ matrix.config }})
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build ${{ matrix.project.name }}
        uses: ./.github/actions/build-linux
        id: build
        with:
          project-dir: ./${{ matrix.project.dir }}/${{ matrix.project.name }}
          config: ${{ matrix.config }}
          compiler: ${{ matrix.compiler }}

      - if: matrix.project.name == 'UnitTestRunner'
        name: Run UnitTestRunner
        run: ${{ steps.build.outputs.build-dir }}/UnitTestRunner
