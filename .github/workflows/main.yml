on: push

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  genrate-cmake-projects:
    strategy:
      matrix:
        os: [macos-latest]
    name: Generate CMake (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - if: runner.os == 'Linux'
        name: Install dependencies
        uses: ./.github/actions/install-linux-dependencies
      - name: Generate Projects
        run: cmake . -B cmake-build -DJUCE_BUILD_EXAMPLES=ON -DJUCE_BUILD_EXTRAS=ON
      - name: Cache cmake-build
        uses: actions/cache@v3
        with:
          path: cmake-build
          key: cmake-build-${{ runner.os }}-${{ github.sha }}

  build-cmake-projects:
    needs: genrate-cmake-projects
    strategy:
      matrix:
        os: [windows-latest]
        target: [AudioPluginExample,
                 ConsoleAppExample,
                 GuiAppExample]
    name: CMake ${{ matrix.target }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - if: runner.os == 'Linux'
        name: Install dependencies
        uses: ./.github/actions/install-linux-dependencies
      - name: Build ${{ matrix.target }} CMake target
        uses: ./.github/actions/build-cmake
        with:
          target: ${{ matrix.target }}

  build-macos-projects:
    strategy:
      matrix:
        project: [
          {dir: examples, name: DemoRunner},
          {dir: extras, name: AudioPluginHost},
          {dir: extras, name: Projucer},
          {dir: extras, name: UnitTestRunner},
        ]
        config: [Release]
    name: ${{ matrix.project.name }} ${{ matrix.config }} (macOS)
    runs-on: macos-latest
    env:
      PROJECT_PATH: ./${{ matrix.project.dir }}/${{ matrix.project.name }}/Builds/MacOSX
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Build project
        working-directory: ${{ env.PROJECT_PATH }}
        run: |
          xcodebuild -configuration ${{ matrix.config }} \
                     GCC_TREAT_WARNINGS_AS_ERRORS=YES
      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.project.name }}-${{ matrix.config }} (macOS)
          path: ${{ env.PROJECT_PATH }}/build/${{ matrix.config }}

  build-ios-projects:
    strategy:
      matrix:
        project: [
          {dir: examples, name: DemoRunner},
          {dir: extras, name: AudioPluginHost}
        ]
        config: [Release]
    name: ${{ matrix.project.name }} ${{ matrix.config }} (iOS)
    runs-on: macos-latest
    env:
      PROJECT_PATH: ./${{ matrix.project.dir }}/${{ matrix.project.name }}/Builds/iOS
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Build project
        working-directory: ${{ env.PROJECT_PATH }}
        run: |
          xcodebuild -configuration ${{ matrix.config }} \
                     -sdk iphonesimulator
                     GCC_TREAT_WARNINGS_AS_ERRORS=YES

  build-android-projects:
    strategy:
      matrix:
        project: [
          {dir: examples, name: DemoRunner},
          {dir: extras, name: AudioPerformanceTest},
          {dir: extras, name: AudioPluginHost},
          {dir: extras, name: NetworkGraphicsDemo}
        ]
        config: [Debug, Release]
    name: ${{ matrix.project.name }} ${{ matrix.config }} (Android)
    runs-on: ubuntu-latest
    env:
      PROJECT_PATH: ./${{ matrix.project.dir }}/${{ matrix.project.name }}/Builds/Android
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          cache: gradle
      - name: Generate debug keystore
        env:
          ANDROID_PATH: ~/.android
        run: |
          mkdir ${{ env.ANDROID_PATH }}
          cd ${{ env.ANDROID_PATH }}
          keytool -genkey \
                  -v \
                  -keystore debug.keystore \
                  -storepass android \
                  -alias androiddebugkey \
                  -keypass android \
                  -keyalg RSA \
                  -keysize 2048 \
                  -validity 10000 \
                  -dname "cn=Android Debug, ou=Android, o=Android, c=UK"
      - name: Build project
        working-directory: ${{ env.PROJECT_PATH }}
        run: ./gradlew --parallel --max-workers=$(nproc) assemble${{ matrix.config }}
